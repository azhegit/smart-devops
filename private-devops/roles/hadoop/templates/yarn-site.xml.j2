<configuration>
    <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
    </property>
    <property>
        <name>yarn.resourcemanager.ha.enabled</name>
        <value>true</value>
    </property>
    <!--该cluster-id不能与nameService相同-->
    <property>
        <name>yarn.resourcemanager.cluster-id</name>
        <value>{{ yarn_cluster_id }}</value>
    </property>
    <!--指定2台Resource Manager节点-->
    <property>
        <name>yarn.resourcemanager.ha.rm-ids</name>
        <value>{% for host in groups['hadoop_yarn_rm'] %}rm{{ loop.index }}{% if not loop.last %},{% endif %}{% endfor %}</value>
    </property>

    {% for host in groups['hadoop_yarn_rm'] %}
    <!-- 指定resource manager机器节点 -->
    <property>
        <name>yarn.resourcemanager.hostname.rm{{ loop.index }}</name>
        <value>{{ host }}</value>
    </property>
    <!--  HTTP服务器地址和端口 默认 8042 -->
    <property>
        <name>yarn.resourcemanager.webapp.address.rm{{ loop.index }}</name>
        <value>{{ host }}:{{ resourcemanager_webapp_address|default(8088) }}</value>
    </property>

    {% endfor %}

    <property>
        <!--Zookeeper的节点-->
        <name>yarn.resourcemanager.zk-address</name>
        <value>{% if groups['zookeeper'] is defined %}
{% for host in groups['zookeeper']  %}{{ hostvars[host].ansible_ssh_host }}:{{ host.leader_port|default('2181') }}{% if not loop.last %},{% endif %}{% endfor %}
{% else %}
{% for host in groups['zookeeper_docker']  %}{{ hostvars[host].ansible_ssh_host }}:{{ host.leader_port|default('2181') }}{% if not loop.last %},{% endif %}{% endfor %}
{% endif %}</value>
    </property>

    <!-- 启用HA高可用性 -->
    <property>
        <name>yarn.resourcemanager.ha.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.resourcemanager.ha.automatic-failover.enabled</name>
        <value>true</value>
    </property>

    {% set memtotal_mb=hostvars[inventory_hostname].ansible_memtotal_mb %}

    <!-- 内存相关设置参数-->
    <!--  表示该节点上YARN可使用的物理内存总量*0.85-->
    <property>
        <name>yarn.nodemanager.resource.memory-mb</name>
        <value>{{ (memtotal_mb*yarn_pecent|default(0.85)) | round|int }}</value>
    </property>

    {% if memtotal_mb<=4*1024 %}{% set minimum_mb=256 %}
    {% elif memtotal_mb>4*1024 and memtotal_mb<=8*1024 %}{% set minimum_mb=512 %}
    {% elif memtotal_mb>8*1024 and memtotal_mb<=24*1024 %}{% set minimum_mb=1024 %}
    {% elif memtotal_mb>24*1024 %}{% set minimum_mb=2048 %}
    {% endif %}

    <property>
        <name>yarn.scheduler.minimum-allocation-mb</name>
        <value>{{ minimum_mb }}</value>
    </property>
    <property>
        <name>yarn.scheduler.maximum-allocation-mb</name>
        <value>{{ (memtotal_mb*yarn_pecent|default(0.85)) | round|int }}</value>
    </property>
    <property>
        <name>yarn.scheduler.increment-allocation-mb</name>
        <value>{{ minimum_mb }}</value>
    </property>

    {% set cpu_count= hostvars[inventory_hostname].ansible_processor_vcpus*hostvars[inventory_hostname].ansible_processor_threads_per_core %}

    <!-- 核数相关设置参数-->
    <property>
        <name>yarn.scheduler.minimum-allocation-vcores</name>
        <value>1</value>
    </property>
    <property>
        <name>yarn.scheduler.increment-allocation-vcores</name>
        <value>1</value>
    </property>
    <property>
        <name>yarn.scheduler.maximum-allocation-vcores</name>
        <value>{{ (cpu_count*yarn_pecent|default(0.85)) | round|int }}</value>
    </property>
    <property>
        <name>yarn.nodemanager.resource.cpu-vcores</name>
        <value>{{ (cpu_count*yarn_pecent|default(0.85)) | round|int }}</value>
    </property>

    <!-- 日志相关参数 -->
    <property>
        <name>yarn.log-aggregation-enable</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.log-aggregation.retain-seconds</name>
        <value>604800</value>
        <description>7days</description>
    </property>
    <property>
        <name>yarn.log-aggregation.retain-check-interval-seconds</name>
        <value>3600</value>
        <description>1 hour</description>
    </property>
    <property>
        <name>yarn.nodemanager.remote-app-log-dir</name>
        <value>/yarn</value>
        <description>hdfs日志根路径</description>
    </property>
    <property>
        <name>yarn.nodemanager.remote-app-log-dir-suffix</name>
        <value>logs</value>
        <description>hdfs日志子路径</description>
    </property>
    <property>
        <name>yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds</name>
        <value>3600</value>
    </property>
    <property>
        <name>yarn.nodemanager.log-dirs</name>
        <value>{{ data_home }}/yarnlogs</value>
        <description>nodemanager node 日志根路径</description>
    </property>

{% if groups['hadoop_yarn_jobhistory'] is defined and groups['hadoop_yarn_jobhistory'][0] is defined %}
    <property>
        <name>yarn.log.server.url</name>
        <value>http://{{ groups['hadoop_yarn_jobhistory'][0] }}:19888/jobhistory/logs</value>
    </property>
{% endif %}


    <property>
        <name>yarn.nodemanager.vmem-check-enabled</name>
        <value>false</value>
    </property>

    <property>
        <name>yarn.nodemanager.pmem-check-enabled</name>
        <value>false</value>
    </property>

    <!--  localizer IPC 默认 8040 -->
    <property>
        <name>yarn.nodemanager.localizer.address</name>
        <value>{{ inventory_hostname }}:{{ nodemanager_localizer_address |default(8040) }}</value>
    </property>
    <!--  NM中container manager的端口 默认 8041 -->
    <property>
        <name>yarn.nodemanager.address</name>
        <value>{{ inventory_hostname }}:{{ nodemanager_address |default(8041) }}</value>
    </property>
    <!--  HTTP服务器地址和端口 默认 8042 -->
    <property>
        <name>yarn.nodemanager.webapp.address</name>
        <value>{{ inventory_hostname }}:{{ nodemanager_webapp_address|default(8042) }}</value>
    </property>

</configuration>